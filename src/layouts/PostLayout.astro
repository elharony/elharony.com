---
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import ReadingProgress from '../components/ReadingProgress.astro';

export interface Props {
  title: string;
  description: string;
  pubDate: Date;
  tags?: string[];
  readingTime?: string;
}

const { title, description, pubDate, tags, readingTime } = Astro.props;

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}

const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": title,
  "datePublished": pubDate.toISOString(),
  "author": { "@type": "Person", "name": "Yahya Elharony" },
  "description": description,
  "mainEntityOfPage": { "@type": "WebPage", "@id": Astro.url.href }
};
---

<BaseLayout title={title} description={description}>
  <ReadingProgress />
  <Header slot="header" />
  
  <article class="container mx-auto px-6 py-16 max-w-4xl">
    <header class="mb-12">
      <h1 class="text-4xl md:text-5xl font-bold text-[#1a1a1a] mb-6 leading-tight">
        {title}
      </h1>
      
      <div class="flex flex-wrap items-center gap-4 text-[#6b7280] mb-6">
        <time datetime={pubDate.toISOString()} class="flex items-center">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
          </svg>
          {formatDate(pubDate)}
        </time>
        {readingTime && (
          <>
            <span class="text-[#e5e7eb]">â€¢</span>
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              {readingTime}
            </span>
          </>
        )}
      </div>
      
      {tags && tags.length > 0 && (
        <div class="flex flex-wrap gap-2 mb-8 sr-only" aria-hidden="true">
          {tags.map(tag => (
            <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-[#f8f9ff] text-[#3212d3]">
              {tag}
            </span>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose prose-lg max-w-none">
      <slot />
    </div>
    
    <footer class="mt-16 pt-8 border-t border-[#e5e7eb]">
      <div class="card">
        <div class="flex items-center space-x-6">
          <div class="w-20 h-20 bg-[#f8f9ff] rounded-xl flex items-center justify-center flex-shrink-0 p-3">
            <img 
              src="/images/logos/Yahya-Elharony-Logo.png" 
              alt="Yahya Elharony" 
              class="w-full h-full object-contain drop-shadow-sm"
            />
          </div>
          <div>
            <h3 class="font-semibold text-lg text-[#1a1a1a]">Yahya Elharony</h3>
            <p class="text-[#6b7280]">
              Engineering Manager and Technical Leader specializing in scalable systems, 
              team leadership, and strategic technology solutions.
            </p>
          </div>
        </div>
      </div>
    </footer>
  </article>
  
  <Footer slot="footer" />
  
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)}></script>
  <script src="/src/scripts/code-enhancements.js"></script>
</BaseLayout>
