---
import '../styles/global.css';

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const { title, description, image } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const GA_ID = 'G-L13B75SKPN';
const isProd = import.meta.env.PROD;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Favicon -->
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="/favicon/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon/favicon-16x16.png">
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={new URL(image, Astro.site)} />}
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    {image && <meta property="twitter:image" content={new URL(image, Astro.site)} />}
    
    <title>{title}</title>
    {isProd && GA_ID && (
      <>
        <script async src={`https://www.googletagmanager.com/gtag/js?id=${GA_ID}`}></script>
        <script is:inline define:vars={{ GA_ID }}>
          window.dataLayer = window.dataLayer || [];
          function gtag(){dataLayer.push(arguments);}
          gtag('js', new Date());
          gtag('config', GA_ID, { anonymize_ip: true });
        </script>
      </>
    )}
  </head>
  <body class={`min-h-screen bg-white text-[#1a1a1a] antialiased ${Astro.url.pathname === '/' ? 'home' : ''}`}>
    <div class="flex flex-col min-h-screen">
      <slot name="header" />
      <main class="flex-grow">
        <slot />
      </main>
      <slot name="footer" />

      <!-- Booking Modal -->
      <div id="booking-modal" class="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
        <div class="rounded-2xl w-full max-w-5xl h-auto max-h-[90vh] relative shadow-2xl border border-gray-800" style="background-color: rgb(23, 23, 23);">
          <!-- Close Button (floating) -->
          <button id="close-booking-modal" class="absolute top-4 right-4 z-10 w-10 h-10 backdrop-blur-sm rounded-full flex items-center justify-center text-gray-400 hover:text-white transition-all duration-200 shadow-lg border border-gray-700" style="background-color: rgb(15, 15, 15);">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </button>
          
          <!-- Cal.com Embed -->
          <div class="rounded-2xl overflow-hidden" style="height: auto; padding-top: 4.5rem;">
            <div style="width:100%;height:100%;overflow:scroll" id="my-cal-inline-free-consultation"></div>
          </div>
        </div>
      </div>

      <style>
        /* Ensure content isn't overlapped by fixed header on non-home pages */
        body:not(.home) main {
          margin-top: 80px; /* approx header height */
        }

        @media (min-width: 768px) {
          body:not(.home) main {
            margin-top: 96px;
          }
        }

        /* Modal animations */
        #booking-modal {
          transition: all 0.3s ease-in-out;
        }

        #booking-modal.modal-opening {
          animation: modalFadeIn 0.3s ease-out forwards;
        }

        #booking-modal.modal-closing {
          animation: modalFadeOut 0.3s ease-in forwards;
        }

        #booking-modal > div {
          transition: transform 0.3s ease-out, opacity 0.3s ease-out;
        }

        #booking-modal.modal-opening > div {
          animation: modalSlideIn 0.3s ease-out forwards;
        }

        #booking-modal.modal-closing > div {
          animation: modalSlideOut 0.3s ease-in forwards;
        }

        @keyframes modalFadeIn {
          from {
            opacity: 0;
            backdrop-filter: blur(0px);
          }
          to {
            opacity: 1;
            backdrop-filter: blur(4px);
          }
        }

        @keyframes modalFadeOut {
          from {
            opacity: 1;
            backdrop-filter: blur(4px);
          }
          to {
            opacity: 0;
            backdrop-filter: blur(0px);
          }
        }

        @keyframes modalSlideIn {
          from {
            transform: scale(0.95) translateY(20px);
            opacity: 0;
          }
          to {
            transform: scale(1) translateY(0);
            opacity: 1;
          }
        }

        @keyframes modalSlideOut {
          from {
            transform: scale(1) translateY(0);
            opacity: 1;
          }
          to {
            transform: scale(0.95) translateY(20px);
            opacity: 0;
          }
        }

        /* Ensure Cal.com embed integrates seamlessly */
        #my-cal-inline-free-consultation {
          border-radius: 16px;
        }

        /* Hide scrollbars but keep functionality */
        #my-cal-inline-free-consultation::-webkit-scrollbar {
          display: none;
        }
        
        #my-cal-inline-free-consultation {
          -ms-overflow-style: none;
          scrollbar-width: none;
        }
      </style>
    </div>

    <!-- Cal inline embed code begins -->
    <script type="text/javascript">
      (function (C, A, L) { let p = function (a, ar) { a.q.push(ar); }; let d = C.document; C.Cal = C.Cal || function () { let cal = C.Cal; let ar = arguments; if (!cal.loaded) { cal.ns = {}; cal.q = cal.q || []; d.head.appendChild(d.createElement("script")).src = A; cal.loaded = true; } if (ar[0] === L) { const api = function () { p(api, arguments); }; const namespace = ar[1]; api.q = api.q || []; typeof namespace === "string" ? (cal.ns[namespace] = api) && p(api, ar) : p(cal, ar); return; } p(cal, ar); }; })(window, "https://app.cal.com/embed/embed.js", "init");
      Cal("init", "free-consultation", {origin:"https://cal.com"});

      Cal.ns["free-consultation"]("inline", {
        elementOrSelector:"#my-cal-inline-free-consultation",
        calLink: "elharony/free-consultation",
        layout: "month_view"
      });
      
      Cal.ns["free-consultation"]("ui", {"theme":"dark","styles":{"branding":{"brandColor":"#5100FF"}},"hideEventTypeDetails":false,"layout":"month_view"});

      // Modal functionality
      document.addEventListener('DOMContentLoaded', function() {
        const modal = document.getElementById('booking-modal');
        const openButton = document.getElementById('open-booking-modal');
        const closeButton = document.getElementById('close-booking-modal');

        // Open modal with animation
        if (openButton) {
          openButton.addEventListener('click', function() {
            modal.classList.remove('hidden');
            modal.classList.add('modal-opening');
            document.body.style.overflow = 'hidden'; // Prevent background scroll
            
            // Remove animation class after animation completes
            setTimeout(() => {
              modal.classList.remove('modal-opening');
            }, 300);
          });
        }

        // Close modal with animation
        function closeModal() {
          modal.classList.add('modal-closing');
          
          setTimeout(() => {
            modal.classList.add('hidden');
            modal.classList.remove('modal-closing');
            document.body.style.overflow = ''; // Restore background scroll
          }, 300);
        }

        if (closeButton) {
          closeButton.addEventListener('click', closeModal);
        }

        // Close modal when clicking outside
        modal.addEventListener('click', function(e) {
          if (e.target === modal) {
            closeModal();
          }
        });

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
          if (e.key === 'Escape' && !modal.classList.contains('hidden')) {
            closeModal();
          }
        });
      });
    </script>
    <!-- Cal inline embed code ends -->
  </body>
</html>
