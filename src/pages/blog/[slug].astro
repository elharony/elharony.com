---
import { getCollection, type CollectionEntry } from 'astro:content';
import PostLayout from '../../layouts/PostLayout.astro';
export const prerender = true;

export async function getStaticPaths() {
  const posts = await getCollection('posts', ({ data }) => {
    return !data.draft;
  });
  
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { Content } = await post.render();

// Calculate reading time (rough estimate)
function calculateReadingTime(content: string) {
  const wordsPerMinute = 200;
  const words = content.split(/\s+/).length;
  const minutes = Math.ceil(words / wordsPerMinute);
  return `${minutes} min read`;
}

const readingTime = calculateReadingTime(post.body);
---

<PostLayout 
  title={post.data.title}
  description={post.data.description}
  pubDate={post.data.pubDate}
  tags={post.data.tags}
  readingTime={readingTime}
>
  <Content />
</PostLayout>
